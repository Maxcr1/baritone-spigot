/*
 * This file is part of Baritone.
 *
 * Baritone is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Baritone is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Baritone.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

group 'baritone'
version '1.8.3'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
compileJava {
    options.encoding = "UTF-8" // allow emoji in comments :^)
}

repositories {
    jcenter()
    mavenLocal()
}

sourceSets {
    api {
        compileClasspath += main.compileClasspath
    }
    main {
        compileClasspath += api.output
    }
    test {
        compileClasspath += main.compileClasspath + main.runtimeClasspath + main.output
        runtimeClasspath += main.compileClasspath + main.runtimeClasspath + main.output
    }
    launch {
        compileClasspath += main.compileClasspath + main.runtimeClasspath + main.output
        runtimeClasspath += main.compileClasspath + main.runtimeClasspath + main.output
    }
    schematica_api {
        compileClasspath += main.compileClasspath
    }
    main {
        compileClasspath += schematica_api.output
    }
}

repositories {

    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    mavenLocal()
}

dependencies {
    testImplementation 'junit:junit:4.12'
    compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.
    compileOnly 'org.spigotmc:spigot:1.19-R0.1-SNAPSHOT:remapped-mojang' // The full Spigot server with no shadowing. Requires mavenLocal.
    compileOnly 'org.jetbrains:annotations:16.0.2'
}
//
//javadoc {
//    options.addStringOption('Xwerror', '-quiet') // makes the build fail on travis when there is a javadoc error
//    options.linkSource true
//    options.encoding "UTF-8" // allow emoji in comments :^)
//}
//
//
//task proguard(type: ProguardTask) {
//    url 'https://downloads.sourceforge.net/project/proguard/proguard/6.0/proguard6.0.3.zip'
//    extract 'proguard6.0.3/lib/proguard.jar'
//}
//
//task createDist(type: CreateDistTask, dependsOn: proguard)
//
//build.finalizedBy(createDist)

//install {
//    def jarApiName = String.format("%s-api-%s", rootProject.name, version.toString())
//    def jarApiForgeName = String.format("%s-api-forge-%s", rootProject.name, version.toString())
//    def jarSAName = String.format("%s-standalone-%s", rootProject.name, version.toString())
//    def jarSAForgeName = String.format("%s-standalone-forge-%s", rootProject.name, version.toString())
//
//    artifacts {
//        archives file("$buildDir/libs/"+jarApiName+".jar")
//        archives file("$buildDir/libs/"+jarApiForgeName+".jar")
//        archives file("$buildDir/libs/"+jarSAName+".jar")
//        archives file("$buildDir/libs/"+jarSAForgeName+".jar")
//    }
//    repositories.mavenInstaller {
//		addFilter('api') { artifact, file -> artifact.name == "baritone-api" }
//		addFilter('api-forge') { artifact, file -> artifact.name == "baritone-api-forge" }
//		addFilter('standalone') { artifact, file -> artifact.name == "baritone-standalone" }
//		addFilter('standalone-forge') { artifact, file -> artifact.name == "baritone-standalone-forge" }
//    }
//}
//
//install.dependsOn(build)
